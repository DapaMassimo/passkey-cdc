openapi: "3.0.0"
info:
  title: Passkey WebAuthn API by Yubico
  version: 1.0.0
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /v1/status:
    get:
      summary: API atatus
      description: Get API status from server
      operationId: APIStatus
      responses:
        '200':
          description: API status response
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/APIStatus'
  /v1/attestation/options:
    post:
      description: Register a new passkey for user
      operationId: ServerPublicKeyCredentialCreationOptionsRequest
      requestBody:
        description: Create passkey for user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttestationOptionsRequest'
            examples:
              Default:
                $ref: '#/components/examples/ServerPublicKeyCredentialCreationOptionsRequest-Default'
              Optional:
                $ref: '#/components/examples/ServerPublicKeyCredentialCreationOptionsRequest-Optional'
      responses:
        '200':
          description: Attestation options response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttestationOptionsResponse'
        '400':
          description: 4xx response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/attestation/result:
    post:
      description: Authenticator attestation response
      operationId: ServerAuthenticatorAttestationResponse
      requestBody:
        description: Send authenticator attestation response as a ServerPublicKeyCredential object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttestationResultRequest'
      responses:
        '201':
          description: New Passkey created for user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttestationResultResponse'
        '400':
          description: 4xx response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/assertion/options:
    post:
      description: Request credential options for user
      operationId: ServerPublicKeyCredentialGetOptionsRequest
      requestBody:
        description: Request credential options for user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertionOptionsRequest'
      responses:
        '200':
          description: Assertion options response from server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertionOptionsResponse'
        '400':
          description: 4xx response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/assertion/result:
    post:
      description: Authenticator assertion response
      operationId: ServerAuthenticatorAssertionResponse
      requestBody:
        description: Send authenticator assertion response to server as a ServerAuthenticatorAssertionResponse object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertionResultRequest'
      responses:
        '200':
          description: Assertion result response from server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertionResultResponse'
        '400':
          description: 4xx response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  # Schemas
  schemas:
    APIStatus:
      type: object
      properties:
        status:
          type: string
          example: ok
    AttestationOptionsRequest:
      type: object
      properties:
        userName: 
          type: string
          example: janedoe@example.com
    AttestationOptionsResponse:
      type: object
      properties: 
        status:
          type: string
          example: ok
        errorMessage:
          type: string
          example: ''
        rp:
          type: object
          properties:
            name:
              type: string
              example: Example Corporation
        user:
          type: object
          properties:
            id:
              type: string
              example: S3932ee31vKEC0JtJMIQ
            name:
              type: string
              example: janedoe@example.com
            displayName:
              type: string
              example: Jane Doe
        challenge:
          type: string
          example: uhUjPNlZfvn7onwuhNdsLPkkE5Fv-lUN
        pubKeyCredParams:
          type: array
          items:
            properties:
              type:
                type: string
                example: public-key
              alg:
                type: integer
                example: -7
        timeout:
          type: integer
          example: 10000
        excludeCredentials:
          type: array
          items:
            properties:
              type:
                type: string
                example: public-key
              id:
                type: string
                example: opQf1WmYAa5aupUKJIQp
        authenticatorSelection:
          type: object
          properties:
            requireResidentKey:
              type: boolean
              example: false
            authenticatorAttachment:
              type: string
              example: cross-platform
            userVerification:
              type: string
              example: preferred
        attestation:
          type: string
          example: direct
          enum:
            - none
            - indirect
            - direct
    AttestationResultRequest:
      type: object
      properties:
        id: 
          type: string
          example: LFdoCFJSJUHc-c72yraRc_1mDvruywA
        response: 
          type: object
          properties:
            clientDataJSON:
              type: string
              example: eyJj0OiJIiwidHlwZSI6IndlYmF1dGhyZWF0ZSJ9...
            attestationObject:
              type: string
              example: o2NmbXRNAQELBQADgbpNt2IOL4i4z96Kqo1rqSUmonen...
        type: 
          type: string
          example: public-key
    AttestationResultResponse:
      properties:
        status: 
          type: string
          example: created
    AssertionOptionsRequest:
      type: object
      properties:
        userName: 
          type: string
          example: janedoe@example.com
    AssertionOptionsResponse:
      type: object
      properties:
        status: 
          type: string
          example: ok
        errorMessage: 
          type: string
          example: ''
        challenge:
          type: string
          example: m7xl_TkTcCe0WcXI2M-4ro9vJAuwcj4m
        timeout:
          type: integer
          example: 20000
        rpId:
          type: string
          example: example.com
        allowCredentials:
          type: array
          items:
            properties:
              id:
                type: string
                example: opQf1WmYAa5aupUKJIQp
              type:
                type: string
                example: public-key
        userVerification:
          type: string
          example: preferred
          enum:
            - required
            - preferred
            - discouraged
    AssertionResultRequest:
      type: object
      properties:
        id: 
          type: string
          example: LFdoCFJTyB82ZzSJUHc-c72yraRc_1mPvG
        response:
          type: object
          properties:
            authenticatorData:
              type: string
              example: SZYN5Gh0NBcPZHZgW4_krrmihjzzuoMdl2MBAAAAAA...
            signature:
              type: string
              example: ME8fLjd5y6TUOLWt5l9DQIhANiYig9newAJZYTzG1i5lwP
            userHandle:
              type: string
              example: ''
            clientDataJSON:
              type: string
              example: eyJjaGFTBrTmM4uIjoiaHR0cDovL2xvY2FsF1dGhuLmdldCJ9...
        type: 
          type: string
          example: public-key
    AssertionResultResponse:
      type: object
      properties:
        status:
          type: string
          example: ok
    Error:
      type: object
      properties:
        status: 
          type: string
          example: error
        errorMessage:
          type: string
          example: descriptive error message
  # Examples
  examples:
    ServerPublicKeyCredentialCreationOptionsRequest-Default:
      summary: 'Default (Required)'
      value: |-
        {
          "username": "johndoe@example.com"
        }
    ServerPublicKeyCredentialCreationOptionsRequest-Optional:
      summary: 'Optional'
      value: |-
        {
          "username": "johndoe@example.com",
          "displayName": "John Doe",
          "authenticatorSelection": {
            "requireResidentKey": false,
            "authenticatorAttachment": "cross-platform",
            "userVerification": "preferred"
          },
        "attestation": "direct"
        }