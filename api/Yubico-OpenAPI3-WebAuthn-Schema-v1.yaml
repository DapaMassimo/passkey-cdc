openapi: "3.0.0"
info:
  title: Passkey WebAuthn API by Yubico
  version: 1.0.0
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /v1/status:
    get:
      summary: Get API status
      operationId: APIStatus
      responses:
        '200':
          description: API status response
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/APIStatus'
  /v1/attestation/options:
    post:
      summary: Request to register a new public-key credential
      operationId: ServerPublicKeyCredentialCreationOptionsRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttestationOptionsRequest'
            examples:
              Default:
                $ref: '#/components/examples/ServerPublicKeyCredentialCreationOptionsRequest-Default'
              Optional:
                $ref: '#/components/examples/ServerPublicKeyCredentialCreationOptionsRequest-Optional'
      responses:
        '200':
          description: Attestation options response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttestationOptionsResponse'
        '400':
          description: 4xx response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/attestation/result:
    post:
      summary: Send public-key attestation response
      operationId: ServerAuthenticatorAttestationResponse
      requestBody:
        description: Send authenticator attestation response as a ServerPublicKeyCredential object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttestationResultRequest'
      responses:
        '201':
          description: New Passkey created for user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttestationResultResponse'
        '400':
          description: 4xx response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/assertion/options:
    post:
      summary: Request public-key credential authentication options for user
      operationId: ServerPublicKeyCredentialGetOptionsRequest
      requestBody:
        description: Request credential options for user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertionOptionsRequest'
      responses:
        '200':
          description: Assertion options response from server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertionOptionsResponse'
        '400':
          description: 4xx response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/assertion/result:
    post:
      summary: Send public-key assertion response
      operationId: ServerAuthenticatorAssertionResponse
      requestBody:
        description: Send authenticator assertion response to server as a ServerAuthenticatorAssertionResponse object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssertionResultRequest'
      responses:
        '200':
          description: Assertion result response from server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertionResultResponse'
        '400':
          description: 4xx response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/user:
    delete:
      summary: Delete user account
      operationId: UserDelete
      requestBody:
        description: Delete user from server
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDelete'
      responses:
        '200':
          description: User successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDeleteResponse'
        '400':
          description: 4xx response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/user/profile:
    get:
      summary: Get user profile
      operationId: UserProfile
      requestBody:
        description: Get user profile by userName
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: User profile response
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/UserProfileResponse'
  /v1/user/credentials:
    get:
      summary: Get user credentials
      operationId: UserCredentials
      requestBody:
        description: Get credentials for user by userName
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: User credentials response
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/UserCredentialsResponse'
    put:
      summary: Update a user credential
      description: Update the nickName of the user credential
      operationId: UserCredentialUpdate
      requestBody:
        description: Send updated nickName of user credential by id
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentialUpdate'
      responses:
        '200':
          description: A successful user credential update response
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/UserCredentialUpdateResponse'
    delete:
      summary: Delete a user credential
      description: Deletes a user credential by id
      operationId: UserCredentialDelete
      requestBody:
        description: Delete user credential by specifying the credential id
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentialDelete'
      responses:
        '200':
          description: A successful user credential deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentialDeleteResponse'
        '400':
          description: 4xx response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  # Schemas
  schemas:
    APIStatus:
      type: object
      properties:
        status:
          type: string
          example: ok
    AttestationOptionsRequest:
      type: object
      properties:
        userName: 
          type: string
          example: janedoe@example.com
    AttestationOptionsResponse:
      type: object
      properties: 
        requestId:
          type: string
          example: B-J4odOi9vcV-4TN_gpokEb1f1EI...
        rp:
          type: object
          properties:
            name:
              type: string
              example: Example Corporation
        user:
          type: object
          properties:
            id:
              type: integer
              example: 4542432
            userName:
              type: string
              example: janedoe@example.com
            displayName:
              type: string
              example: Jane Doe
        challenge:
          type: string
          example: uhUjPNlZfvn7onwuhNdsLPkkE5Fv-lUN
        pubKeyCredParams:
          type: array
          items:
            properties:
              type:
                type: string
                example: public-key
              alg:
                type: integer
                example: -7
        timeout:
          type: integer
          example: 10000
        excludeCredentials:
          type: array
          items:
            properties:
              type:
                type: string
                example: public-key
              id:
                type: string
                example: opQf1WmYAa5au-kk-pUKJIQp...
        authenticatorSelection:
          type: object
          properties:
            residentKey:
              type: string
              example: preferred
              default: preferred
              enum:
                - discouraged
                - preferred
                - required
            authenticatorAttachment:
              type: string
              example: cross-platform
              default: cross-platform
              enum:
                - cross-platform
                - platform
            userVerification:
              type: string
              example: preferred
              default: preferred
              enum: 
                - required
                - preferred
                - discouraged
        attestation:
          type: string
          example: direct
          default: direct
          enum:
            - none
            - indirect
            - direct
    AttestationResultRequest:
      type: object
      properties:
        id: 
          type: string
          example: LFdoCFJSJUHc-c72yraRc_1mDvruywA
        response: 
          type: object
          properties:
            clientDataJSON:
              type: string
              example: eyJj0OiJIiwidHlwZSI6IndlYmF1dGhyZWF0ZSJ9...
            attestationObject:
              type: string
              example: o2NmbXRNAQELBQADgbpNt2IOL4i4z96Kqo1rqSUmonen...
        type: 
          type: string
          example: public-key
    AttestationResultResponse:
      properties:
        status: 
          type: string
          example: created
    AssertionOptionsRequest:
      type: object
      properties:
        userName: 
          type: string
          example: janedoe@example.com
    AssertionOptionsResponse:
      type: object
      properties:
        requestId:
          type: string
          example: B-J4odOi9vcV-4TN_gpokEb1f1EI...
        errorMessage: 
          type: string
          example: ''
        challenge:
          type: string
          example: m7xl_TkTcCe0WcXI2M-4ro9vJAuwcj4m
        timeout:
          type: integer
          example: 20000
        rpId:
          type: string
          example: example.com
        allowCredentials:
          type: array
          items:
            properties:
              id:
                type: string
                example: opQf1WmYAa5aupUKJIQp
              type:
                type: string
                example: public-key
                default: public-key
        userVerification:
          type: string
          example: preferred
          default: preferred
          enum:
            - required
            - preferred
            - discouraged
    AssertionResultRequest:
      type: object
      properties:
        id: 
          type: string
          example: LFdoCFJTyB82ZzSJUHc-c72yraRc_1mPvG
        response:
          type: object
          properties:
            authenticatorData:
              type: string
              example: SZYN5Gh0NBcPZHZgW4_krrmihjzzuoMdl2MBAAAAAA...
            signature:
              type: string
              example: ME8fLjd5y6TUOLWt5l9DQIhANiYig9newAJZYTzG1i5lwP
            userHandle:
              type: string
              example: ''
            clientDataJSON:
              type: string
              example: eyJjaGFTBrTmM4uIjoiaHR0cDovL2xvY2FsF1dGhuLmdldCJ9...
        type: 
          type: string
          example: public-key
          default: public-key
    AssertionResultResponse:
      type: object
      properties:
        status:
          type: string
          example: ok
    UserProfile:
      type: object
      properties:
        userName:
          type: string
          example: janedoe@example.com 
    UserProfileResponse:
      type: object
      properties:
        id:
          type: integer
          example: 34545132
        userName:
          type: string
          example: janedoe@example.com
        displayName:
          type: string
          example: Jane Doe
        lastLoginDate:
          type: string
          format: date-time
          example: 2023-01-09T13:44:02Z
    UserDelete:
      type: object
      properties:
        userName:
          type: string
          example: janedoe@example.com
    UserDeleteResponse:
      type: object
      properties:
        result:
          type: string
          example: deleted 
    UserCredentials:
      type: object
      properties:
        userName:
          type: string
          example: janedoe@example.com
    UserCredentialsResponse:
      type: object
      properties:
        credentials:
          type: array
          items:
            properties:
              id:
                type: string
                example: DthUeofXNtlMevkt_M7aiD3cm70...
              type:
                type: string
                example: public-key
              nickName:
                type: string
                example: YubiKey 5Ci
              registrationTime:
                type: string
                format: date-time
                example: 2022-07-21T17:32:28Z
              lastUsedTime:
                type: string
                format: date-time
                example: 2022-07-21T18:15:06Z
    UserCredentialUpdate:
      type: object
      properties:
        id:
          type: string
          example: DthUeofXNtlMevkt_M7aiD3cm70...
        nickName:
          type: string
          example: YubiKey 5Ci home
    UserCredentialUpdateResponse:
      type: object
      properties:
        status:
          type: string
          example: updated
    UserCredentialDelete:
      type: object
      properties:
        id:
          type: string
          example: DthUeofXNtlMevkt_M7aiD3cm70...
    UserCredentialDeleteResponse:
      type: object
      properties:
        result:
          type: string
          example: deleted
    Error:
      type: object
      properties:
        status: 
          type: string
          example: error
        errorMessage:
          type: string
          example: descriptive error message
  # Examples
  examples:
    ServerPublicKeyCredentialCreationOptionsRequest-Default:
      summary: 'Default (Required)'
      value: |-
        {
          "username": "janedoe@example.com"
        }
    ServerPublicKeyCredentialCreationOptionsRequest-Optional:
      summary: 'Optional'
      value: |-
        {
          "username": "janedoe@example.com",
          "authenticatorSelection": {
            "requireResidentKey": false,
            "authenticatorAttachment": "cross-platform",
            "userVerification": "preferred"
          },
        "attestation": "direct"
        }